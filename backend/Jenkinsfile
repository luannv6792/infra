pipeline {
    agent any

    environment {
        // üß© DockerHub credentials ID (ph·∫£i t·∫°o tr∆∞·ªõc trong Jenkins UI)
        DOCKERHUB_CREDENTIALS = 'dockerhub'
        DOCKERHUB_USER = 'luannv67922'   // üîÅ thay b·∫±ng user th·∫≠t
        IMAGE_NAME = 'infraback'
        IMAGE_TAG = "build-${BUILD_NUMBER}"

        // üß© K8s namespace
        K8S_NAMESPACE = "app"
        DEPLOYMENT_FILE = "k8s/backend_deployment.yml"
    }

    stages {
        stage('Checkout') {
            steps {
                echo "üì¶ Cloning Git repository..."
                checkout scm
            }
        }

        stage('Build Docker image') {
            steps {
                script {
                    echo "üèóÔ∏è Building Docker image..."
                    sh "docker build -t ${DOCKERHUB_USER}/${IMAGE_NAME}:${IMAGE_TAG} ."
                }
            }
        }

        stage('Push Docker image to DockerHub') {
            steps {
                script {
                    echo "üöÄ Pushing Docker image to DockerHub..."
                    withCredentials([usernamePassword(credentialsId: "${DOCKERHUB_CREDENTIALS}", usernameVariable: 'USER', passwordVariable: 'PASS')]) {
                        sh """
                            echo "$PASS" | docker login -u "$USER" --password-stdin
                            docker push ${DOCKERHUB_USER}/${IMAGE_NAME}:${IMAGE_TAG}
                            docker logout
                        """
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                    echo "‚ò∏Ô∏è Deploying to Kubernetes cluster..."

                    // üß© Replace image tag dynamically in deployment YAML
                    sh """
                        sed -i.bak 's#${DOCKERHUB_USER}/${IMAGE_NAME}:latest#${DOCKERHUB_USER}/${IMAGE_NAME}:${IMAGE_TAG}#' ${DEPLOYMENT_FILE}
                    """

                    // üß© Apply deployment
                    sh """
                        kubectl apply -f ${DEPLOYMENT_FILE} -n ${K8S_NAMESPACE}
                        kubectl rollout status deployment/infraback-deployment -n ${K8S_NAMESPACE}
                    """

                    echo "‚úÖ Deployment completed."
                }
            }
        }
    }

    post {
        success {
            echo "üéâ Build and deploy successful!"
        }
        failure {
            echo "‚ùå Pipeline failed."
        }
    }
}
